<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <!--   Maven项目的父级POM文件，用于管理多个子项目的依赖库和构建配置-->
    <groupId>org.example</groupId>
    <artifactId>SpringCloud</artifactId>
    <version>1.0-SNAPSHOT</version>
    <!--    设置项目的打包类型为pom，表示这个项目不需要打包成jar或war文件-->
    <packaging>pom</packaging>
    <modelVersion>4.0.0</modelVersion>

    <!--    Maven项目的父级POM文件中的modules配置，用于指定所有子项目的名称-->
    <modules>
        <module>cloud-provider-payment8001</module>
    </modules>

    <!--    properties配置，用于定义一些全局变量（统一管理jar包版本），方便在其他地方引用-->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>      <!--编码格式-->
        <maven.compiler.source>1.8</maven.compiler.source>      <!--Java源代码版本-->
        <maven.compiler.target>1.8</maven.compiler.target>      <!--目标字节码的版本-->
        <junit.version>4.12</junit.version>     <!--JUnit版本号-->
        <log4j.version>1.2.17</log4j.version>       <!--Log4j版本号-->
        <lombok.version>1.16.18</lombok.version>       <!--Lombok版本号-->
        <mysql.version>5.1.47</mysql.version>       <!--MySQL连接器版本号-->
        <druid.version>1.1.16</druid.version>       <!--Druid版本号-->
        <mybatis.spring.boot.version>1.3.0</mybatis.spring.boot.version>    <!--MyBatis-Spring-Boot-Starter版本号-->
    </properties>

    <!--管理所有依赖库的版本号,所有引用了Spring Boot的子项目都可以继承和覆盖这个版本号;
    子模块继承之后，提供作用：锁定版本+子modlue不用写groupId和version-->
    <dependencyManagement>
        <dependencies>
            <!--spring boot 2.2.2-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>2.2.2.RELEASE</version>    <!--依赖库的版本号-->
                <type>pom</type>    <!--依赖库类型-->
                <scope>import</scope>   <!--依赖库范围-->
            </dependency>

            <!--spring cloud Hoxton.SR1-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>Hoxton.SR1</version>    <!--依赖库的版本号-->
                <type>pom</type>    <!--依赖库类型-->
                <scope>import</scope>   <!--依赖库范围-->
            </dependency>

            <!--spring cloud alibaba 2.1.0.RELEASE-->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>2.1.0.RELEASE</version>    <!--依赖库的版本号-->
                <type>pom</type>    <!--依赖库类型-->
                <scope>import</scope>   <!--依赖库范围-->
            </dependency>

            <!--引入MySQL连接器的依赖库，使得Java程序可以通过JDBC连接到MySQL数据库-->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version> <!--依赖库的版本的实际值由POM文件中的properties配置决定-->
            </dependency>

            <!--Druid是一个高性能的JDBC连接池，它支持监控、防御SQL注入等功能，是目前比较流行的连接池之一-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>

            <!--MyBatis Spring Boot Starter是Spring Boot应用程序中配置和使用MyBatis的便捷方式-->
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis.spring.boot.version}</version>
            </dependency>

            <!--JUnit是一个Java编程语言的单元测试框架，它支持测试驱动开发（TDD）和行为驱动开发（BDD）等开发方法-->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
            </dependency>

            <!--Log4j是一个Java编程语言的日志框架，它提供了灵活的配置选项和多种输出方式，可以助开发人员更好地管理和调试应用程序-->
            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>${log4j.version}</version>
            </dependency>

            <!--Lombok是一个Java编程语言的库，它提供了一组注解和工具，可以帮助开发人员减少样板代码，提高代码的可读性和可维护性-->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <optional>true</optional>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <addResources>true</addResources>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>